// <auto-generated />
using System;
using Blossom.Data.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Blossom.Data.Model.Migrations
{
    [DbContext(typeof(BlossomContext))]
    partial class BlossomContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Blossom.Data.Model.BusinessProfiles.BusinessProfileEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("size");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("bc_businessprofile");
                });

            modelBuilder.Entity("Blossom.Data.Model.StudentProfiles.StudentProfileEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Degree")
                        .HasColumnType("text");

                    b.Property<string>("Graduating")
                        .HasColumnType("text");

                    b.Property<string>("Majors")
                        .HasColumnType("text");

                    b.Property<string>("Skills")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("University")
                        .HasColumnType("text");

                    b.Property<string>("WorkingStatus")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("bc_studentprofile");
                });

            modelBuilder.Entity("Blossom.Data.Model.Users.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AuthId")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)")
                        .HasColumnName("authId");

                    b.Property<Guid?>("BusinessProfileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<Guid?>("StudentProfileId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AuthId")
                        .IsUnique();

                    b.HasIndex("BusinessProfileId");

                    b.HasIndex("StudentProfileId");

                    b.ToTable("bc_user");
                });

            modelBuilder.Entity("Blossom.Data.Model.Users.UserEntity", b =>
                {
                    b.HasOne("Blossom.Data.Model.BusinessProfiles.BusinessProfileEntity", "BusinessProfile")
                        .WithMany()
                        .HasForeignKey("BusinessProfileId");

                    b.HasOne("Blossom.Data.Model.StudentProfiles.StudentProfileEntity", "StudentProfile")
                        .WithMany()
                        .HasForeignKey("StudentProfileId");

                    b.Navigation("BusinessProfile");

                    b.Navigation("StudentProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
